// transition
@mixin transition($property, $duration, $timing) {
    transition-property: $property;
    transition-duration: $duration;
    transition-timing-function: $timing;
}

// lists
@mixin clear-list {
    margin: 0;
    padding: 0;
    li {
        list-style: none;
    }
}

@mixin clear-list-inline {
    margin: 0;
    padding: 0;
    li {
        list-style: none;
        display: inline-block;
        vertical-align: middle;
    }
}

// inlines
@mixin inline-middle {
    display: inline-block;
    vertical-align: middle;
}

@mixin inline-top {
    display: inline-block;
    vertical-align: top;
}

// clearfix
@mixin clearfix {
    &:before,
    &:after {
        display: table;
        content: ' ';
    } // &:before, &:after
    &:after {
        clear: both;
    }
}

@mixin table {
    table-layout: fixed;
    display: table;
    width: 100%;
    box-sizing: border-box;
}

@mixin table-cell {
    display: table-cell;
    vertical-align: top;
    box-sizing: border-box;
}

@mixin elipsis {
    display: block;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin property($property, $values) {
    $px : ();
    $rem: ();
    @each $value in $values {
        $px: append($px,  $value + px);
        $rem: append($rem, rem($value));
    }
    #{$property}: $px;
    #{$property}: $rem;
}

@mixin boxshadow($values, $color) {
    $px : ();
    $rem: ();
    @each $value in $values {
        $px: append($px,  $value + px);
        $rem: append($rem, rem($value));
    }
    box-shadow: $px $color;
    box-shadow: $rem $color;
}

@mixin icon {
   font-size: inherit;
   line-height: 1;
   text-rendering: auto;
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
   transform: translate(0, 0);
}

@mixin icon-fa {
   @include icon;
   font-family: FontAwesome;
}

$padding-side: 30px;
$padding-side-tablet: $padding-side;
$padding-side-mobile: 20px;

@mixin container {
    width: calc(100% - ($padding-side * 2));
    padding: 0 $padding-side;
    @include bp(xs) {
        width: calc(100% - ($padding-side-mobile * 2));
        padding: 0 $padding-side-mobile;
    } // xs
    @include bp(sm) {
        width: calc(100% - ($padding-side-mobile * 2));
        padding: 0 $padding-side-mobile;
    } // sm
} // container

@mixin bp($point) {
    $bp-xs: "(max-width : 480px)";
    $bp-xs-helpdesk: "(min-width : 480px) and (max-width : 768px)";
    $bp-sm: "(min-width : 768px) and (max-width : 992px)";
    $bp-md: "(min-width : 992px) and (max-width : 1200px)";
    $bp-lg: "(min-width : 1200px)";

    // extrasmall – mobile
    @if $point == xs {
        @media #{$bp-xs} { @content; }
        @media #{$bp-xs-helpdesk} { @content; }
    }
    // small – (not only mobile)
    @if $point == sm {
        @media #{$bp-sm} { @content; }
    }
    // medium – smallscreen laptop & tablets & some mobile
    @if $point == md {
        @media #{$bp-md} { @content; }
    }
    // medium – big screens
    @if $point == lg {
        @media #{$bp-lg} { @content; }
    }
}
